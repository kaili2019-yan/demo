"""
Django settings for AutoOperation project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import socket
from logging.config import dictConfig

import ldap
from django_auth_ldap.config import LDAPSearch

hostname = socket.gethostname()
if "op-net1-vm" in hostname:
    from .settings_prod import *
else:
    from .settings_dev import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '************aayk2*5k3e(0qnrr95$qy1baol^41hcvy136'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account',
]

# session config
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_COOKIE_AGE = 86400  # 设置session有效期为一天,默认两周

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# ldap config
LDAP_HOST = 'ldap://127.0.0.1:389'
LDAP_ADMIN = 'cn=admin,dc=testldap,dc=com'
LDAP_PASS = '123456'
BASE_DN = "ou=People,dc=testldap,dc=com"

AUTH_LDAP_SERVER_URI = LDAP_HOST
AUTH_LDAP_BIND_DN = LDAP_ADMIN
AUTH_LDAP_BIND_PASSWORD = LDAP_PASS

# 用户的DN是uid=caojun,ou=People,dc=ldap,dc=ssotest,dc=net，所以用uid
AUTH_LDAP_USER_SEARCH = LDAPSearch('%s' % BASE_DN, ldap.SCOPE_SUBTREE, "(cn =%(user)s)")

# key为数据库字段名，value为ldap中字段名，此字典解决django model与ldap字段名可能出现的不一致问题
AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "cn",
    "last_name": "sn",
    "email": "mail"
}

# 是否同步LDAP的修改，默认为True，即当LDAP中用户的属性修改后用户经过LDAP系统认证时自动同步更新到Django的User表中，若是设置为False则不自动更新
AUTH_LDAP_ALWAYS_UPDATE_USER = True

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',  # 配置为先使用LDAP认证，如通过认证则不再使用后面的认证方式
    'django.contrib.auth.backends.ModelBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'AutoOperation.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'AutoOperation.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'ENGINE': 'django.db.backends.mysql',
        'HOST': MYSQL_HOST,
        'PORT': MYSQL_PORT,
        'NAME': MYSQL_DB,
        'USER': MYSQL_USER,
        'PASSWORD': MYSQL_PASS,
        'TEST_CHARSET': 'UTF8',
        'init_command': 'SET foreign_key_checks = 0;',
    }
}
LOGIN_URL = "/account/login/"

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Log setting
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,

    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(filename)s.%(funcName)s:%(lineno)s %(message)s'
        },
        'simple': {
            "format": '%(levelname)s %(message)s'
        },
    },

    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },

        'app_log_file': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': LOG_PATH + 'app.log',
            'when': 'midnight',
            'backupCount': 30,
            'formatter': 'verbose',
        },

        'ldap_log_file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': LOG_PATH + 'ldap_log_file.log',
            'formatter': 'verbose',
        },

        # 'django_crontab': {
        #     'level': 'DEBUG',
        #     'class': 'logging.FileHandler',
        #     'filename': LOG_PATH + 'django_crontab.log',
        #     'formatter': 'verbose',
        # },
        #
        # 'celery_log_file': {
        #     'level': 'DEBUG',
        #     'class': 'logging.handlers.TimedRotatingFileHandler',
        #     'filename': LOG_PATH + 'backup_default_queue.log',
        #     'formatter': 'verbose',
        # },
    },

    'loggers': {
        'app_log': {
            'handlers': ['app_log_file'],
            'level': 'INFO',
            'propagate': False,
        },

        'ldap_log': {
            'handlers': ['ldap_log_file'],
            'level': 'INFO',
            'propagate': False,
        },
        # 'django_crontab.crontab': {
        #     'handlers': ['django_crontab'],
        #     'level': 'DEBUG',
        #     'propagate': True,
        # },
        # 'celery.task': {
        #     'handlers': ['celery_log_file'],
        #     'level': 'INFO',
        #     'propagate': False,
        # },
        # 'celery': {
        #     'handlers': ['celery_log_file'],
        #     'level': 'INFO',
        #     'propagate': False,
        # },
    },
}

dictConfig(LOGGING)

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
